<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:beans="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd">

    <bean id="springContextUtil" class="org.springagg.util.SpringContextUtil"/>

    <!--连接池配置-->
    <bean class="redis.clients.jedis.JedisPoolConfig" id="jedisPoolConfig">
        <property name="maxTotal" value="600"/>
        <property name="maxIdle" value="300"/>
        <property name="minIdle" value="10"/>
        <property name="maxWaitMillis" value="20000"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>


    <!--connectionFactory配置-->
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" id="connectionFactory">
        <property name="hostName" value="123.206.50.85"/>
        <property name="port" value="6379"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <property name="timeout" value="5000"/>
        <!--使用连接池-->
        <property name="usePool" value="true"/>
    </bean>
    <!--redisTemplate配置-->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

   <bean class="org.springframework.data.redis.core.RedisTemplate" id="redisTemplate2" p:connectionFactory-ref="connectionFactory"
   p:keySerializer-ref="stringRedisSerializer" p:hashKeySerializer-ref="stringRedisSerializer"
   p:valueSerializer-ref="stringRedisSerializer" p:hashValueSerializer-ref="stringRedisSerializer"/>

</beans>