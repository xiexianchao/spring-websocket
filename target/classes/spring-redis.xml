<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:beans="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd">

    <context:component-scan base-package="org.springagg.service"/>

    <!--连接池配置-->
    <bean class="redis.clients.jedis.JedisPoolConfig" id="jedisPoolConfig">
        <property name="maxTotal" value="600"/>
        <property name="maxIdle" value="300"/>
        <property name="minIdle" value="10"/>
        <property name="maxWaitMillis" value="20000"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>


    <!--connectionFactory配置-->
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" id="connectionFactory">
        <property name="hostName" value="123.206.50.85"/>
        <property name="port" value="6379"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
        <property name="timeout" value="5000"/>
        <!--使用连接池-->
        <property name="usePool" value="true"/>
    </bean>
    <!--redisTemplate配置-->
    <bean class="org.springframework.data.redis.core.StringRedisTemplate" id="redisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

   <bean class="org.springframework.data.redis.core.RedisTemplate" id="redisTemplate2" p:connectionFactory-ref="connectionFactory"/>

    <!--监听类-->
    <bean id="messageListener" class="org.springagg.listener.MyMessageListener"/>

    <!--监听适配器-->
    <bean id="messageListenerAdapter" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="defaultListenerMethod" value="getMessage"/>
        <property name="delegate" ref="messageListener"/>
        <property name="serializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>
    <!--Topic配置-->
   <!-- <bean id="topic" class="org.springframework.data.redis.listener.PatternTopic">
        <constructor-arg name="pattern" value="topic"/>
    </bean>-->


    <!--container配置-->
    <!--<bean id="container" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="topicSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="messageListeners" >
            <map key-type="org.springframework.data.redis.connection.MessageListener" value-type="org.springframework.data.redis.listener.PatternTopic">
                <entry key-ref="messageListenerAdapter" value-ref="topic"/>
            </map>
           &lt;!&ndash; <map key-type="listener.Listener" value-type="org.springframework.data.redis.listener.PatternTopic">
                <entry key-ref="listener" value-ref="topic"/>
            </map>&ndash;&gt;
        </property>
    </bean>-->

    <redis:listener-container connection-factory="connectionFactory">
        <redis:listener ref="messageListener" method="getMessage" topic="mqMessage"/>
    </redis:listener-container>




</beans>